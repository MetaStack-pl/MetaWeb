package pine

package object tag {
  type A = "a"
  val A = Tag("a")
  type Acronym = "acronym"
  val Acronym = Tag("acronym")
  type Address = "address"
  val Address = Tag("address")
  type Applet = "applet"
  val Applet = Tag("applet")
  type Area = "area"
  val Area = Tag("area")
  type Article = "article"
  val Article = Tag("article")
  type Audio = "audio"
  val Audio = Tag("audio")
  type B = "b"
  val B = Tag("b")
  type Base = "base"
  val Base = Tag("base")
  type Basefont = "basefont"
  val Basefont = Tag("basefont")
  type Big = "big"
  val Big = Tag("big")
  type Body = "body"
  val Body = Tag("body")
  type Br = "br"
  val Br = Tag("br")
  type Button = "button"
  val Button = Tag("button")
  type Canvas = "canvas"
  val Canvas = Tag("canvas")
  type Caption = "caption"
  val Caption = Tag("caption")
  type Center = "center"
  val Center = Tag("center")
  type Code = "code"
  val Code = Tag("code")
  type Col = "col"
  val Col = Tag("col")
  type Colgroup = "colgroup"
  val Colgroup = Tag("colgroup")
  type Content = "content"
  val Content = Tag("content")
  type Datalist = "datalist"
  val Datalist = Tag("datalist")
  type Dd = "dd"
  val Dd = Tag("dd")
  type Del = "del"
  val Del = Tag("del")
  type Details = "details"
  val Details = Tag("details")
  type Dialog = "dialog"
  val Dialog = Tag("dialog")
  type Dir = "dir"
  val Dir = Tag("dir")
  type Div = "div"
  val Div = Tag("div")
  type Dl = "dl"
  val Dl = Tag("dl")
  type Dt = "dt"
  val Dt = Tag("dt")
  type Em = "em"
  val Em = Tag("em")
  type Embed = "embed"
  val Embed = Tag("embed")
  type Fieldset = "fieldset"
  val Fieldset = Tag("fieldset")
  type Figcaption = "figcaption"
  val Figcaption = Tag("figcaption")
  type Figure = "figure"
  val Figure = Tag("figure")
  type Footer = "footer"
  val Footer = Tag("footer")
  type Form = "form"
  val Form = Tag("form")
  type Frame = "frame"
  val Frame = Tag("frame")
  type Frameset = "frameset"
  val Frameset = Tag("frameset")
  type H1 = "h1"
  val H1 = Tag("h1")
  type H2 = "h2"
  val H2 = Tag("h2")
  type H3 = "h3"
  val H3 = Tag("h3")
  type H4 = "h4"
  val H4 = Tag("h4")
  type H5 = "h5"
  val H5 = Tag("h5")
  type H6 = "h6"
  val H6 = Tag("h6")
  type Head = "head"
  val Head = Tag("head")
  type Header = "header"
  val Header = Tag("header")
  type Hgroup = "hgroup"
  val Hgroup = Tag("hgroup")
  type Hr = "hr"
  val Hr = Tag("hr")
  type Html = "html"
  val Html = Tag("html")
  type I = "i"
  val I = Tag("i")
  type Iframe = "iframe"
  val Iframe = Tag("iframe")
  type Img = "img"
  val Img = Tag("img")
  type Input = "input"
  val Input = Tag("input")
  type Ins = "ins"
  val Ins = Tag("ins")
  type Isindex = "isindex"
  val Isindex = Tag("isindex")
  type Keygen = "keygen"
  val Keygen = Tag("keygen")
  type Label = "label"
  val Label = Tag("label")
  type Legend = "legend"
  val Legend = Tag("legend")
  type Li = "li"
  val Li = Tag("li")
  type Link = "link"
  val Link = Tag("link")
  type Listing = "listing"
  val Listing = Tag("listing")
  type Main = "main"
  val Main = Tag("main")
  type Map = "map"
  val Map = Tag("map")
  type Menu = "menu"
  val Menu = Tag("menu")
  type Menuitem = "menuitem"
  val Menuitem = Tag("menuitem")
  type Meta = "meta"
  val Meta = Tag("meta")
  type Meter = "meter"
  val Meter = Tag("meter")
  type Nav = "nav"
  val Nav = Tag("nav")
  type Noscript = "noscript"
  val Noscript = Tag("noscript")
  type Object = "object"
  val Object = Tag("object")
  type Ol = "ol"
  val Ol = Tag("ol")
  type Optgroup = "optgroup"
  val Optgroup = Tag("optgroup")
  type Option = "option"
  val Option = Tag("option")
  type Output = "output"
  val Output = Tag("output")
  type P = "p"
  val P = Tag("p")
  type Param = "param"
  val Param = Tag("param")
  type Plaintext = "plaintext"
  val Plaintext = Tag("plaintext")
  type Pre = "pre"
  val Pre = Tag("pre")
  type Progress = "progress"
  val Progress = Tag("progress")
  type Script = "script"
  val Script = Tag("script")
  type Section = "section"
  val Section = Tag("section")
  type Select = "select"
  val Select = Tag("select")
  type Shadow = "shadow"
  val Shadow = Tag("shadow")
  type Small = "small"
  val Small = Tag("small")
  type Source = "source"
  val Source = Tag("source")
  type Spacer = "spacer"
  val Spacer = Tag("spacer")
  type Span = "span"
  val Span = Tag("span")
  type Strike = "strike"
  val Strike = Tag("strike")
  type Strong = "strong"
  val Strong = Tag("strong")
  type Style = "style"
  val Style = Tag("style")
  type Summary = "summary"
  val Summary = Tag("summary")
  type Svg = "svg"
  val Svg = Tag("svg")
  type Table = "table"
  val Table = Tag("table")
  type Tbody = "tbody"
  val Tbody = Tag("tbody")
  type Td = "td"
  val Td = Tag("td")
  type Template = "template"
  val Template = Tag("template")
  type Textarea = "textarea"
  val Textarea = Tag("textarea")
  type Tfoot = "tfoot"
  val Tfoot = Tag("tfoot")
  type Th = "th"
  val Th = Tag("th")
  type Thead = "thead"
  val Thead = Tag("thead")
  type Title = "title"
  val Title = Tag("title")
  type Tr = "tr"
  val Tr = Tag("tr")
  type Track = "track"
  val Track = Tag("track")
  type Tt = "tt"
  val Tt = Tag("tt")
  type Ul = "ul"
  val Ul = Tag("ul")
  type Video = "video"
  val Video = Tag("video")
  type Xmp = "xmp"
  val Xmp = Tag("xmp")
}
